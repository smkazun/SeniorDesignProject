@using OpenSourceBlog.Database.Models
﻿@model IEnumerable<Post>
@{
    ViewBag.Title = "Home Page";
}
<div class="jumbotron">
    <h1>BETTERBLOGENGINE.NET</h1>
</div>

<div class="row">
    <script>
        function redirectURL(identifier, targetID) {
            if (identifier == 1)
                window.location = createPostURL(targetID);
            if (identifier == 2)
                window.location = createAuthorURL(targetID);
        }

        function createPostURL(targetID) {
            var URL = "/posts/details/" + targetID;
            return URL;
        }

        function createAuthorURL(targetID) {
            var URL = "/account/" + targetID;
            return URL;
        }
    </script>
    @foreach (var item in Model)
    {
        <div class="Postbox">
            <h1>
                <a href="#" style="color:#000000;" onclick="redirectURL(1,1); return false;">@Html.DisplayFor(modelItem => item.Title)</a>
            </h1>
            <p>
                By <a href="#" onclick="redirectURL(2,1); return false;">@Html.DisplayFor(modelItem => item.Author)</a>
</p>
            <p>
                <i>@Html.DisplayFor(modelItem => item.DateCreated)</i>
                @*if the modified time is not empty then display it*@
                @if (!item.DateModified.ToString().Equals(String.Empty))
                {
                    <i>| Edited: @Html.DisplayFor(modelItem => item.DateModified)</i>
                }
            </p>
            @*<p>
                    Rating: @Html.DisplayFor(modelItem => item.Rating)
                </p>*@
            <p>
                <i>@Html.DisplayFor(modelItem => item.Description)</i>
            </p>
            <hr>
            <p>
                @Html.Raw(item.PostContent.Length > 400 ? item.PostContent.Substring(0,400) : item.PostContent)
                <a href="#" class="font-weight-bold" onclick="redirectURL(1,1); return false;"> ...Continue Reading</a>
            </p>
        </div>
    }
</div>
