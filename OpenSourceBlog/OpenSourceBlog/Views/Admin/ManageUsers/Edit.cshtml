@model OpenSourceBlog.Models.ManageUsersViewModel

@{
    ViewBag.Title = "Edit";
    // Layout = "~/Views/Shared/_AdminNavBar.cshtml";
}

@using (Html.BeginForm("Edit", "ManageUsers"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>AspNetUser</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.User.Id)

        @{
            List<SelectListItem> roles = new List<SelectListItem>
            {
                new SelectListItem {Text = "Admin", Value = "Administrators"},
                new SelectListItem {Text = "Editor", Value = "Editors"},
                new SelectListItem {Text = "User", Value = "Users"}
            };
        }

        <div class="form-group">
            @Html.LabelFor(model => model.Role, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Role, roles, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.User.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.User.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.User.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.User.EmailConfirmed, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.User.EmailConfirmed)
                    @Html.ValidationMessageFor(model => model.User.EmailConfirmed, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.User.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.User.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.User.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.User.PhoneNumberConfirmed, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.User.PhoneNumberConfirmed)
                    @Html.ValidationMessageFor(model => model.User.PhoneNumberConfirmed, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.User.TwoFactorEnabled, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.User.TwoFactorEnabled)
                    @Html.ValidationMessageFor(model => model.User.TwoFactorEnabled, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.User.LockoutEnabled, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.User.LockoutEnabled)
                    @Html.ValidationMessageFor(model => model.User.LockoutEnabled, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.User.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.User.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.User.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-secondary" />
                <button class="btn btn-secondary partial-view" href="#" data-url='@Url.Action("Index", "ManageUsers")'>Back</button>
            </div>

        </div>
    </div>
}
<script>
    $('.partial-view').on('click', function (evt) {
        evt.preventDefault();
        evt.stopPropagation();

        var $detailDiv = $('#main_page_content'),
            url = $(this).data('url');

        $.get(url, function (data) {
            $detailDiv.replaceWith(data);
        });
    });
</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
