@model List<OpenSourceBlog.Database.Models.Setting>
@{
    ViewBag.Title = "ManageSettings";
    Layout = "~/Views/Shared/_AdminNavBar.cshtml";
}

<h2>Manage Settings</h2>


@using (Html.BeginForm("ManageSettings", "Settings", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    //var emptySetting = (OpenSourceBlog.Database.Models.Setting)ViewData["sitesetting"];
    @Html.AntiForgeryToken()
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


    for (int i = 0; i < Model.Count(); i++)
    {
       
        @Html.HiddenFor(m => m[i].SettingRowId)

       
        <div class="form-group row d-none">
            @Html.LabelFor(m => m[i].BlogId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(m => m[i].BlogId, new { htmlAttributes = new { @class = "form-control", @Value = GlobalVariables.BlogId } })
                @Html.ValidationMessageFor(m => m[i].BlogId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row d-none">
            @Html.DisplayFor(m => m[i].SettingName)
            <div class="col-md-10">
                @Html.EditorFor(m => m[i].SettingName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m[i].SettingName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row d-none">
            @Html.DisplayFor(m => m[i].SettingRowId)
            <div class="col-md-10">
                @Html.EditorFor(m => m[i].SettingRowId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m[i].SettingRowId, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group row">
            @Html.DisplayFor(m => m[i].SettingName)
            <div class="col-md-10">
                @Html.EditorFor(m => m[i].SettingValue, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m[i].SettingValue, "", new { @class = "text-danger" })
            </div>
        </div>


    }


    <div class="form-group" align="center">
        <input type="submit" value="Save" class="btn btn-success btn-block" /><br />

    </div>
}

<p>
    @Html.ActionLink("Back to List", "Index")
</p>
