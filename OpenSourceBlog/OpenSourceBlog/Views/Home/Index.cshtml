@using PagedList.Mvc;
@model OpenSourceBlog.Models.HomeViewModel

@{
    ViewBag.Title = "Home Page";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" />

<style>

    .parentContainer {
       display: flex;
    }

    .leftContainer{
        width: 70%;
    }

    .rightContainer {
        flex: 1;
        margin-top: 7%;
        
    }


    img.rounded-corners {
        border-radius: 50%
    }

    .verticalLine {
        border-left: thin solid #000000;
        margin-left: 3px;
        margin-right: 3px;
        margin-top: 3px;
    }

    h2 {
        margin-top: 10px;
    }

    .homenav {
        padding-left: 3px;
        padding-right: 3px;
        padding-top: 10px;
        padding-bottom: 10px;
    }

    .homenav a {
        padding-left: 5px;
        padding-right: 5px;
        margin-left: 2px;
        margin-right: 2px;
        border-bottom: 3px solid transparent;
    }

    .homenav a:hover {
        border-bottom: 3px solid black;
    }

    .homenav a.active {
        border-bottom: 3px solid black;
    }

    ul.nav li.dropdown:hover ul.dropdown-menu {
        display: block;
        padding-left: 3px;
        padding-right: 3px;
        padding-top: 10px;
        padding-bottom: 10px;
    }

    .Postbox {
        background-color: white;
        padding: 10px;
        height: auto;
        width: auto;
        border-bottom: 1px solid grey;
        /*box-shadow: 0 4px 6px 0 rgba(0, 0, 0, 0.2), 0 6px 15px 0 rgba(0, 0, 0, 0.19);*/
    }

    .pagination a {
        color: black;
        float: left;
        padding: 8px 16px;
        text-decoration: none;
        transition: background-color .3s;
        border: 1px solid #ddd;
    }

    .pagination .active {
        background-color: cornflowerblue;
        color: white;
    }

    .pagination a:hover:not(.active) {
        background-color: #ddd;
    }

    .button{
        padding: 0px 10px 0px 10px;
    }

</style>

<article class="news-article">

    <br>
    <h2 align="center">@ViewData["BlogTitle"]</h2>
    <h3 align="center">@ViewData["BlogDesc"]</h3>
    <hr style="width: 70%" />

    @*
        <div class="row">
            @Html.ActionLink("Most Recent", "postSort", new { id = 1 }, null)
            <div class="verticalLine"></div>
            @Html.ActionLink("Least Recent", "postSort", new { id = 2 }, null)
            <div class="verticalLine"></div>
            @Html.ActionLink("Highest Rated", "postSort", new { id = 3 }, null)
        </div>*@

    <br>
    <section class="parentContainer">

        <div class="leftContainer">
            @foreach (var item in Model.Post)
            {
                <div class="Postbox">
                    <h1>
                        <a href="#" style=" color: #000000;" onclick="redirectURL(1,@(item.PostRowId)); return false;">@Html.DisplayFor(modelItem => item.Title)</a>
                    </h1>
                    <div>
                        <p style="color:lightgrey" ;>
                            <img src="https://www.gravatar.com/avatar/00000000000000000000000000000000?s=200" onload="this.onload=null; this.src=getIconUrl('@(item.Author)');" class="rounded-corners" alt="Avatar" style="width:30px"> By @Html.ActionLink(item.Author, "Details", "Profiles", new { id = 1 }, null)
                            @*<a href="#" data-url='@Url.Action("getAuthorId","Profiles", new { email = item.Author })' class="nav-link">*@

                            <i>@Html.DisplayFor(modelItem => item.DateCreated)</i>
                            @*if the modified time is not empty then display it*@
                            @if (!item.DateModified.ToString().Equals(String.Empty))
                            {
                                <i>| Edited: @Html.DisplayFor(modelItem => item.DateModified)</i>
                            }
                        </p>
                    </div>
                    @*<p>
                        Rating: @Html.DisplayFor(modelItem => item.Rating)
                    </p>*@
                    <p style="color:lightgrey" ;>
                        <i>@Html.DisplayFor(modelItem => item.Description)</i>
                    </p>

                    <p>
                        @if (item.PostContent != null)
                        {
                            @Html.Raw(item.PostContent.Length > 400 ? item.PostContent.Substring(0, 400) : item.PostContent);
                        }
                        @if (item.PostContent != null && item.PostContent.Length > 400)
                        {
                            <a href="#" class="font-weight-bold" onclick="redirectURL(1,@(item.PostRowId)); return false;"> ...Continue Reading</a>
                        }
                    </p>
                </div>
            }
        </div>

        <nav class="homenav navbar-expand-sm">

            <div class="navbar-collapse collapse" id="navbarSupportedContent">
                <div class=" rightContainer">

                    @using (Html.BeginForm("Index", "Home", FormMethod.Get))
                    {
                    <div class="input-group md-form form-sm form-2 pl-0">
                        @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control my-0 py-1 red-border", placeholder = "Search" })
                        <button class="button" type="submit"><i class="fa fa-search"></i></button>
                    </div>
                    }

                    <ul class="nav navbar-nav mr-auto">
                        <li class="dropdown">
                            <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false" style="color: #000000; text-decoration: none">Category<span class="caret"></span></a>
                            <ul class="dropdown-menu">
                            </ul>
                        </li>
                    </ul>


                    <ul class="nav navbar-nav mr-auto">
                        <li class="dropdown">
                            <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false" style="color: #000000; text-decoration: none">Sort<span class="caret"></span></a>
                            <ul class="dropdown-menu">
                                <li><a href="#" style="color: #000000; text-decoration: none">@Html.ActionLink("Most Recent", "postSort", new { id = 1 }, null)</a></li>
                                <li><a href="#" style="color: #000000; text-decoration: none">@Html.ActionLink("Least Recent", "postSort", new { id = 2 }, null)</a></li>
                                <li><a href="#" style="color: #000000; text-decoration: none">@Html.ActionLink("Highest Rated", "postSort", new { id = 3 }, null)</a></li>
                            </ul>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>

    </section>
    <div class=" row justify-content-center">
        Page @(Model.Post.PageCount < Model.Post.PageNumber ? 0 : Model.Post.PageNumber) of @Model.Post.PageCount
        
    </div>
    <div class=" row justify-content-center">
        @Html.PagedListPager(Model.Post, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, @class = "paging" }))
    </div>
</article>


<script>
    function redirectURL(identifier, targetID) {
        if (identifier == 1)
            window.location = createPostURL(targetID);
        if (identifier == 2)
            window.location = createAuthorURL(targetID);
    }

    function createPostURL(targetID) {
        var URL = "/posts/details/" + targetID;
        return URL;
    }

    function createAuthorURL(targetID) {
        var URL = "/profiles/details/" + targetID;
        return URL;
    }
    $('.nav-link').on('click', function (evt) {
        evt.preventDefault();
        evt.stopPropagation();

        var $detailDiv = $('#main_page_content'),
            url = $(this).data('url');

        $.get(url, function (data) {
            $detailDiv.html(data);
        });
    });
</script>