@using OpenSourceBlog.Database.Models
@using OpenSourceBlog.Controllers
﻿@model OpenSourceBlog.Database.Models.Post
@{
    ViewBag.Title = "Home Page";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    img.rounded-corners {
        border-radius: 50%
    }
    textarea {
        resize: none;
        overflow: hidden;
        min-height: 50px;
        max-height: 100px;
        width: 2000px;
    }
    @*.sidenav {
        right: 0%;
        width: 25%;
        position: fixed;
    }
    .leftcontent{
        width: 75%;
    }*@
    .homenav {
        padding-left: 3px;
        padding-right: 3px;
        padding-top: 10px;
        padding-bottom: 10px;
    }

    .homenav a {
        padding-left: 5px;
        padding-right: 5px;
        margin-left: 2px;
        margin-right: 2px;
        border-bottom: 3px solid transparent;
    }

    .homenav a:hover {
        border-bottom: 3px solid black;
    }

    .homenav a.active {
        border-bottom: 3px solid black;
    }
</style>

<div class="container">
    @*<aside class="sidenav">
                <div>
                    <div>
                        @using (Html.BeginForm("Index", "Home", FormMethod.Get))
                        {
                            <h5>Search Posts</h5>
                            @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
                            <input type="submit" value="Search" />
                        }
                    </div>
                    <p></p>
                <div>
                    <h5>Top Rated Posts</h5>

                </div>
                <p></p>
                <div>
                    <h5>Most Recent Posts</h5>

                </div>
        </div>
            </aside>*@

    <nav class="homenav navbar-expand-sm border border-right-0 border-left-0">
        <div class="container">
            <div class="navbar-collapse collapse" id="navbarSupportedContent">
                <ul class="nav navbar-nav mr-auto">
                    <li>
                        <a href="#" onclick="goBack()" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false" style="color: #000000; text-decoration: none">Back<span class="caret"></span></a>

                    </li>
                </ul>
                @using (Html.BeginForm("Index", "Home", FormMethod.Get))
                {
                    @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
                    <input type="submit" value="Search" placeholder="Search" />
                }
            </div>
        </div>
    </nav>

    <section>
        <div class="Postbox">
            <h1>
                @Html.DisplayFor(model => model.Title)
            </h1>
            <p>
                <div>
                    <img src="https://www.gravatar.com/avatar/00000000000000000000000000000000?s=200" onload="this.onload=null; this.src=getIconUrl('@Html.DisplayFor(model=>model.Author)');" class="rounded-corners" alt="Avatar" style="width:30px">
                    By @Html.DisplayFor(model => model.Author)  <i>@Html.DisplayFor(model => model.DateCreated)</i>
                    @*@Html.ActionLink((Model=>Model.author), "Details", "Profiles", new { id = 1 }, null)*@
                    @*if the modified time is not empty then display it
        @if (!(model.DateModified.ToString().Equals(String.Empty)))
        {
            <i>| Edited: @Html.DisplayFor(model => model.DateModified)</i>
        }*@
                </div>
            </p>
            @*<p>
                    Rating: @Html.DisplayFor(modelItem => item.Rating)
                </p>*@
            <p><p></p>
            <i>@Html.DisplayFor(model => model.Description)</i>
            </p>
            <hr>
            <p>
                @Html.Raw(Model.PostContent)
            </p>
            <hr>
            <div>
                <img src="https://www.gravatar.com/avatar/00000000000000000000000000000000?s=200" onload="this.onload=null; this.src=getIconUrl('@Html.DisplayFor(model => model.Author)');" id="grav_icon" class="rounded-corners" alt="Avatar" style="width:100px"> <h5>@Html.DisplayFor(model => model.Author)</h5>
                @*@Html.ActionLink((Model=>Model.author), "Details", "Profiles", new { id = 1 }, null)*@
            </div>

        </div>
        <div>
            <h4>Comments</h4>
            @if (User.Identity.IsAuthenticated)
            {
                using (Html.BeginForm("Create", "PostComments", FormMethod.Post))
                {
                    <div class="form-group d-none">
                        @Html.LabelFor(model => model.BlogId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.BlogId, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.BlogId, "", new { @class = "text-danger" })
                        </div>
                    </div>



                    <div class="form-group d-none">
                        @Html.LabelFor(model => model.PostId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.PostId, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PostId, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    @Html.TextBox("CommentDate", DateTime.Now, new { @style = "display:none" })
                    @Html.TextBox("Author", User.Identity.Name, new { @style = "display:none" })
                    @Html.TextBox("Email", User.Identity.Name, new { @style = "display:none" })

                    @Html.TextArea("Comment", "", new { @cols = "400", @rows = "8", @style = "width:100%;max-width:100%; " })


                    <br />
                    <div class="form-group">
                            <input type="submit" value="Create" class="btn btn-primary" />
                    </div>

                    }

                }
                else
                {
                <div>
                    <center><h5>Log in to comment</h5></center>
                </div>
            }
            @foreach (var comment in ViewBag.Comments)
            {
        <div style="margin-bottom:10px; padding: 10px;">
            @Html.Raw(comment.CommentDate)
            <br/>
            @Html.Raw(comment.Author)
            <br />
            @Html.Raw(comment.Comment)
        </div>
        <hr />
             }
            <hr>
        </div>
    </section>
</div>


<script>
    function auto_grow(element) {
        element.style.height = "5px";
        element.style.height = (element.scrollHeight) + "px";
    }
    function goBack() {
        window.history.back();
    }
</script>