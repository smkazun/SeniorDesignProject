@model OpenSourceBlog.Database.Models.Post

@{
    ViewBag.Title = "Create";
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


<script src="~/Scripts/ckeditor/ckeditor.js"></script>
<script src="~/Scripts/ckeditor/adapters/jquery.js"></script>

<div style="text-align:center; margin-bottom:30px">
    <h1 class="display-4">Create Post</h1><hr />
</div>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    var emptyPost = (OpenSourceBlog.Database.Models.Post)ViewData["mypost"];
    <div class="form-horizontal">
        
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group d-none">
            @Html.LabelFor(model => model.BlogId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BlogId, new { htmlAttributes = new { @class = "form-control", @Value = GlobalVars.BlogId } })
                @Html.ValidationMessageFor(model => model.BlogId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group d-none">
            @Html.LabelFor(model => model.PostId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PostId, new { htmlAttributes = new { @class = "form-control", @Value = Guid.NewGuid() } })
                @Html.ValidationMessageFor(model => model.PostId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PostContent, "Post Content", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.PostContent, htmlAttributes: new { @class = "form-control ckeditor_textarea" })
                @Html.ValidationMessageFor(model => model.PostContent, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group d-none">
            @Html.LabelFor(model => model.DateCreated, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateCreated, new { htmlAttributes = new { @class = "form-control", @Value = DateTime.Now } })
                @Html.ValidationMessageFor(model => model.DateCreated, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group d-none">
            @Html.LabelFor(model => model.DateModified, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateModified, new { htmlAttributes = new { @class = "form-control", @Value = String.Empty } })
                @Html.ValidationMessageFor(model => model.DateModified, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group d-none">
            @Html.LabelFor(model => model.Author, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Author, new
           {
               htmlAttributes = new
               {
                   @class = "form-control",
                   @Value = @User.Identity.Name.Substring(0, @User.Identity.Name.IndexOf("@", StringComparison.Ordinal))
               }
           })
                @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsPublished, "Publish Post", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="dropdown">
                    @Html.EditorFor(model => model.IsPublished)
                    @Html.ValidationMessageFor(model => model.IsPublished, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.IsCommentEnabled, "Enable Comments", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsCommentEnabled)
                    @Html.ValidationMessageFor(model => model.IsCommentEnabled, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group d-none">
            @Html.LabelFor(model => model.Raters, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Raters, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Raters, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group d-none">
            @Html.LabelFor(model => model.Rating, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Rating, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Rating, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group d-none">
            @Html.LabelFor(model => model.Slug, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Slug, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Slug, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsDeleted, "Archive", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    <label for="archiveCheck"></label>
                    @Html.EditorFor(model => model.IsDeleted, new { htmlAttributes = new { @class = "regular-checkbox", @id = "archiveCheck" } })
                    <label for="archiveCheck"></label>
                    @Html.ValidationMessageFor(model => model.IsDeleted, "", new { @class = "text-danger" })

                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-outline-primary" />
                @*@Html.ActionLink("Back to List", "Index")*@
            </div>
        </div>
    </div>
}
<script>
    $('.ckeditor_textarea').ckeditor();
    $(document).ready(function () {
        $('.list-box').selectpicker();
    });

</script>