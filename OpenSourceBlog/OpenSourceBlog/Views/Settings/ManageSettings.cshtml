@model List<OpenSourceBlog.Database.Models.Setting>
@{
    ViewBag.Title = "ManageSettings";
    Layout = "~/Views/Shared/_AdminNavBar.cshtml";
}

<style>



    .col-md-2 {
        float: left;
        position: relative;
        left: 50px;
    }

    .wrapper {
        border: 1px solid #999999;
        margin: 5px 0;
        padding: 3px;
    }

    .submitForm {
        margin-top: 10px;
    }
</style>




<h2>Manage Settings</h2>


@using (Html.BeginForm("ManageSettings", "Settings", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal settingsForm", role = "form" }))
{

    @Html.AntiForgeryToken()
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


    for (int i = 0; i < Model.Count(); i++)
    {
        @*HIDDEN--------------------*@
        @Html.HiddenFor(m => m[i].SettingRowId)


        <div class="form-group row d-none">
            @Html.LabelFor(m => m[i].BlogId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(m => m[i].BlogId, new { htmlAttributes = new { @class = "form-group row form-control", @Value = GlobalVars.BlogId } })
                @Html.ValidationMessageFor(m => m[i].BlogId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row d-none">
            @Html.DisplayFor(m => m[i].SettingName)
            <div class="col-md-10">
                @Html.EditorFor(m => m[i].SettingName, new { htmlAttributes = new { @class = "form-group row form-control" } })
                @Html.ValidationMessageFor(m => m[i].SettingName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row d-none">
            @Html.DisplayFor(m => m[i].SettingRowId)
            <div class="col-md-10">
                @Html.EditorFor(m => m[i].SettingRowId, new { htmlAttributes = new { @class = "form-group row form-control" } })
                @Html.ValidationMessageFor(m => m[i].SettingRowId, "", new { @class = "text-danger" })
            </div>
        </div>
        @*HIDDEN--------------------*@

        <div class="form-row" align="center">

            <div class="col-md-2" align="left">
                @Html.DisplayFor(m => m[i].SettingName, new { htmlAttributes = new { @class = "form-control displayName" } })
            </div>

            <div class="col-md-10" align="center">

                @if (Model[i].SettingName == "Blog Title")
                {
                    @Html.EditorFor(m => m[i].SettingValue, new { htmlAttributes = new { @class = "form-group row form-control settingValue", @style = "width: 60%; max-width: 100%;", required = "required" } })
                    @Html.ValidationMessageFor(m => m[i].SettingValue, "", new { @class = "text-danger" })

                }
                else if (Model[i].SettingName == "Blog Description")
                {

                    @Html.TextAreaFor(m => m[i].SettingValue, 4, 100, new { @class = "form-group row form-control blogDescription", @style = "max-width: 60%;" })
                    @Html.ValidationMessageFor(m => m[i].SettingValue, "", new { @class = "text-danger" })

                }
                else if (Model[i].SettingName == "# posts per page")
                {
                    @Html.EditorFor(m => m[i].SettingValue, new { htmlAttributes = new { @class = "form-group row form-control settingValue", @style = "width: 60%; max-width: 100%;", required = "required", min = "0", name = "number", type = "number" } })
                    @Html.ValidationMessageFor(m => m[i].SettingValue, "", new { @class = "text-danger" })
                }
                else if (Model[i].SettingName == "Blog Language")
                {

                    @Html.DropDownListFor(m => m[i].SettingValue, new List<SelectListItem>
                       {
                           new SelectListItem {Text = "English", Value = "English", Selected = true },
                           new SelectListItem {Text = "Spanish", Value = "Spanish" },
                           new SelectListItem {Text = "Polish", Value = "Polish" },
                           }, "Select Language", new { @class = "form-control row form-control settingValue", @style = "width: 60%; max-width: 100%;" })

                    @Html.ValidationMessageFor(m => m[i].SettingValue, "", new { @class = "text-danger" })
                }


            </div>

        </div>

    }


    <div class="form-group submitForm" align="center">
        <input type="submit" value="Save" class="btn btn-success btn-block" /><br />

    </div>
}

<p>
    @Html.ActionLink("Back to List", "Index")
</p>




