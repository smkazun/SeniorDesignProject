@using OpenSourceBlog.Database.Models
﻿@model IEnumerable<Post>
@{
    ViewBag.Title = "Home Page";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    img.rounded-corners {
        border-radius: 50%
    }

    .verticalLine{
        
         border-left: thin solid #000000;
         margin-left: 3px;
         margin-right: 3px;
         margin-top: 3px;
    }
</style>

<article class="news-article">
    <script>
        function redirectURL(identifier, targetID) {
            if (identifier == 1)
                window.location = createPostURL(targetID);
            if (identifier == 2)
                window.location = createAuthorURL(targetID);
        }

        function createPostURL(targetID) {
            var URL = "/posts/details/" + targetID;
            return URL;
        }

        function createAuthorURL(targetID) {
            var URL = "/profiles/details/" + targetID;
            return URL;
        }
        $('.nav-link').on('click', function (evt) {
                evt.preventDefault();
                evt.stopPropagation();

                var $detailDiv = $('#main_page_content'),
                    url = $(this).data('url');

                $.get(url, function (data) {
                    $detailDiv.html(data);
                });
            });
    </script>
    <div class="row">
        @Html.ActionLink("Most Recent", "mostRecentSort", "Home")
        <div class="verticalLine"></div>
        @Html.ActionLink("Least Recent", "leastRecentSort", "Home")
        <div class="verticalLine"></div>
        @Html.ActionLink("Highest Rated", "highestRatedSort", "Home")

    </div>
   
    @*
        <select onchange="location = this.options[this.selectedIndex].value;">
            <option value="#">Select an option</option>
            <option value="1">Most Recent</option>
            <option value="2">Least Recent</option>
            <option value="3">Popular</option>
        </select>
    *@


    @foreach (var item in Model)
    {
        <div class="Postbox">
            <h1>
                <a href="#" style="color:#000000;" onclick="redirectURL(1,@(item.PostRowId)); return false;">@Html.DisplayFor(modelItem => item.Title)</a>
            </h1>
            <div>
                <img src="https://www.gravatar.com/avatar/00000000000000000000000000000000?s=200" onload="this.onload=null; this.src=getIconUrl('@(item.Author)');" class="rounded-corners" alt="Avatar" style="width:30px">
                @*<a href="#" data-url='@Url.Action("getAuthorId","Profiles", new { email = item.Author })' class="nav-link">*@
                    By @Html.ActionLink(item.Author, "getAuthorId", "Profiles")
                
                    <i>@Html.DisplayFor(modelItem => item.DateCreated)</i>
                @*if the modified time is not empty then display it*@
                @if (!item.DateModified.ToString().Equals(String.Empty))
                {
                    <i>| Edited: @Html.DisplayFor(modelItem => item.DateModified)</i>
                }
            </div>
            @*<p>
                    Rating: @Html.DisplayFor(modelItem => item.Rating)
                </p>*@
            <p><p></p>
            <i>@Html.DisplayFor(modelItem => item.Description)</i>
            </p>
            <hr>
            <p>
                @Html.Raw(item.PostContent.Length > 400 ? item.PostContent.Substring(0, 400) : item.PostContent)
                @if (item.PostContent.Length > 400)
                {
                        <a href="#" class="font-weight-bold" onclick="redirectURL(1,@(item.PostRowId)); return false;"> ...Continue Reading</a>
                }
            </p>
        </div>
    }
</article>
